language: minimal
dist: bionic
before_install:
- export RECORD_RUNTIME=true
- export LC_ALL=C.UTF-8
- export LANG=C.UTF-8
- export LANGUAGE=C.UTF-8
- export PATH=/root/.local/bin:$PATH
- rm -rf tmp/cache tmp/cache1 tmp/cache2 tmp/cache3 tmp/cache4 tmp/cache5 && mkdir -p tmp/cache tmp/cache1
  tmp/cache2 tmp/cache3 tmp/cache4 tmp/cache5
before_script:
- echo '[default]' > /app/credentials && echo "aws_access_key_id = $AWS_ACCESS_KEY_ID" >> /app/credentials && echo "aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" >> /app/credentials
- cp config/config.yml.example config/config.yml
- cp config/database.yml.example config/database.yml
- cp config/sidekiq.yml.example config/sidekiq.yml
- cp config/credentials.json.example config/credentials.json
- cp config/sidekiq-test.yml.example config/sidekiq-test.yml
- docker-compose build
- docker-compose -f docker-compose.yml -f docker-test.yml up -d
- until curl --silent -I -f --fail http://localhost:3000 ; do printf .; sleep 1; done
- docker-compose exec api test/setup-parallel-env.sh
- docker-compose exec api bundle exec rake assets:precompile
- sleep 10
- touch tmp/parallel_runtime_test.log
- chmod +w tmp/parallel_runtime_test.log
after_script:
- docker-compose exec
  -e TRAVIS_BRANCH=$TRAVIS_BRANCH
  -e TRAVIS_PULL_REQUEST=$TRAVIS_PULL_REQUEST
  -e TRAVIS_TEST_RESULT=$TRAVIS_TEST_RESULT
  -e TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG
  -e TRAVIS_BUILD_NUMBER=$TRAVIS_BUILD_NUMBER
  -e GIT_COMMIT_SHA=$GIT_COMMIT_SHA
  -e GIT_COMMITTED_AT=$GIT_COMMITTED_AT
  -e CC_TEST_REPORTER_ID=$CC_TEST_REPORTER_ID
  -e PATH=$PATH
  -e TRAVIS_JOB_NAME=$TRAVIS_JOB_NAME
  -e AWS_CONFIG_FILE=/app/credentials
  api test/test-coverage.sh
jobs:
  include:
    - stage: tests
      name: functional-tests
      script: docker-compose exec -e PATTERN='models mailers integration workers lib' api test/run-tests.sh
    - stage: tests
      name: unit-tests
      script: docker-compose exec -e PATTERN='controllers' api test/run-tests.sh
notifications:
  slack:
    secure: dhqNhrJ0FVPnjtxa7R6k0s+1h/gMFNeK8zYJLZw+mK/FJ41K1u82Y8E6IDFbgNcKyAJ27ielvzGgWGSkDVltEnPR+ph15OMcy05TM9Pr2tWNusbDECOaEQgn4vGOq0shmiahE9tTOQpgc1TzhzIF9o1xgocah2PCLKiiH06kiiRlNZkaeQSJRFrXsPDDK8jIUtkLLUvFGQA6fq/lOh4tN6/N+K6+fo86wSxarkjv3d6h2flqvQqvqkbNpkv/UBC2Y1QACP+EX6uA0ySer8K5X6Q0Trrkjjacwvo5j74UVa+UYrBD+vr7Mgnr5aNFNId6M2nHd92ZiPM+6VDllCWsDLvJ2qFFy8cOO693EjrU7puaPp29+sptriIC71dk1oHSIEpPWwuaEZKzpwP4Swe322ne2th2VrjMhIye2Ru0519Lr2Dl4iTVV+hxoeVta3Nng23rUjrGoAbcw2FO1jmhANp8JWatv/V4PmlrS1/kYbiCfltWOMbKAD9f1EOTFnPCJsp3hPL238Ic+kvNJ8LM+ItNNR5cly+JPto6nSnMO8uhig9i78Mp2hVpnvrwhDLYntWEP2vcaNhP8oRys7X2iq5PRmsRwr9SyJReczd6i5gnvskXqKat6mNfPeGMBKSYof/1ve3Um0wEtwaYxvU5y/ZezFc3Kzzi6vt4P86j+mg=
env:
  global:
    - secure: NwJYV3kghSW2hReSDOnY0sG1oe7IDcix/pZprWHkfkpc+520355n71uj7gofQ2tOO7x2rg2+j9q1GVx9hbP0EsOCIl2u0csnA7lrfe9COp9cGdM7gMzSN6CvuwW9OME9eark37ACSHW1LD1TGB6OcjOkoQxTCM4E00Nj1zAYdT4gbhnBLnxW0FPpEqRB+0XN6ev53HdE5+KrwOIG/chYL/FdaTUdjfyikoduJp5pPjHt1Nd+LSoEt3WbYs8IJeSJIdzCYrD/gXHdjGF1f8v4PFCFyl1ashFtLPMuS+4DBZjR4grSbhpTBwoJAr6oRbWJNAkmaxC26s574U/7QgP6MFlJzhgKim2gvyGUmTSKgxZViyn1y7oend+vWE0281lHDMPqtO3fNel6HteFm/GoJ3lSvZPd8ddveJNacPZB6+K7KzvJWEoRy5eYdUjaejA6KiaSkblpqXoMWwDH+RjCde/HANxMhrECa9yCZlLKBdI5dPccyQwxKnebyZkU37VeWFc9fw2EUy9gmAunV5SH/Osz7b+IX+h3Mf8WxSvQutCUrD+1kspzkEVEXX41SawKD30OfMX9ZBZB9ueisyjB4kW0GzvCGlANMAQ4VDS4/FOmc+5IhcDN8i8PvzE5IGooETOtcwMWVZMrbA0/vq2Z44WQpS2Lq1NYGYhqAN947lk=
    - secure: lLyERoM5p4ggOme89E1b/LW8PRwZvMyn14KRU0qa5Ce4DWPQ5qNB96fpXPeshAaD5163rxWGGA2z0a1XbMa98QH7XO0u88Azg1Y/d5yMJiHsFvKaIR7oEJqtgIs1sSgnC2q0/B0Sk8Zyqx45IvND0VRuHE2pI2IkZR3H65ro78BsuXzwX3zwoqU0Es7n9MawBoiTbZMs4MZiaHXgnQj2AdbWEx9jdigBM3omMc/29WRTVyFtPCL/RHg5TVe00Z5vNU2+uLYqF1U+HB+Cru0tyRJsPcCay3ksAy8PpHqX0KrFF04vSaN4K0RVScVk/0cXvXGuuud2GRujDyqcoClkuJCwyqRN1wJKto7B3kr+MblEIdTW13ef+VABIFR71+2uVlJJduMrmX2pzdIoroi0dg1T32sxxL8jes6hE437YGKtx1UKcJr94+ZhOHWyCbNF9mRRqBluFet8YyNaBdQKp5V685izsmpVrn/xShmcUWL7+MlDNbekEi3GDKMqmVNs8TNZZROSLiA1wwyn8AuB2u2/3sPHZGwroiRVUIx73Rg765KYfoR+gyonNgbn+AhXT0+7mAuLwqu/6msHjuNk0RRdRq4h+G8bh3jf7hbzUaiQC4F7J0Il+F3/DeegdwWNGWrE2+8Aa5619mJD3o+brOlLdmMHv3hLixx8ogBUKbo=
    - secure: lB1eqOWmQVA6seElLmHg9tRzJN8jjDQ4UT6pcROGubk2Ru94gIsJnkFAeCqbp3AyfFWJAHIdCQH1q34krOMfEc+bEQnC5hSjY8PeYbdRnpTx32EDd2bl3ErnUuYq7OyXbHUpono7rzLiUWCjnsGOlz40R7LvN+wIIdP8cUD3F2OezalVSyNwIQPKmwTwIcTQrMcUdeOvlTTZ0BtbNZbHWKd6UZ7RTUOfnPy1un2dS3DAtQIbLM9Q4f4FpsZOqNntFuC8XfC+7wc1u4BA3mjat6iX9J46q2XThlhYqbIG/X79CqIB1lfpnh6Uh9yn4drrmldfnJbhl9w7T8yAF7kt2QzmydH8pnj1X5VcvtaTdMyox2ivCysfpQWkO62i0PbCxqX2+UMy9LHj3Wmis3ydx1flaRxjstykgySOFO9gvx4JOBfS9FjeRyd04YKDn/z9dbVZ9eJ3HYusf8QyPv1ZcaURpVqUszxEjg1bH36gtBC5fMoKF9Mk/SXJY1P6yQ5tRMy0C5A343HQ8xI6rUFomxe2Pk089wP92anphtF0KlF8ZjSEDAPbEXN6qsh+GCszVZQ3YRlQoLGj2fpJI236y28GgbcMmEhlKT2P/AtC78sMQyjGIY2rOH0pVBtYQz1qch2h/6z9tDvSOwI/SmcLwhE7tawIOiCWI3d/oXRFJMM=
