language: ruby
dist: bionic
services:
- postgresql
before_install:
- export APP=check
- export RECORD_RUNTIME=true
- export PATH=/tmp/bundler/ruby/2.4.0/bin:$PATH
- export GEM_PATH=/tmp/bundler/ruby/2.4.0/gems:$GEM_PATH
- sudo rm -f /etc/apt/sources.list.d/mongodb*
- docker run -d -p 9000:9000 -e "MINIO_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE" -e "MINIO_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY" minio/minio server /data
- sudo apt-get update
- sudo apt-get install -y wget phantomjs redis-server graphicsmagick fontconfig libfontconfig ffmpegthumbnailer libtag1-dev golang-go golang-glide
- mkdir -p /tmp/downloads &&
  cd /tmp/downloads &&
  (ls elasticsearch-6.8.9.deb || wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.8.9.deb) &&
  (ls elasticsearch-6.8.9.deb.sha512 || wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.8.9.deb.sha512) &&
  shasum -a 512 -c elasticsearch-6.8.9.deb.sha512 &&
  sudo dpkg -i --force-confnew elasticsearch-6.8.9.deb &&
  cd -
- sudo /usr/share/elasticsearch/bin/elasticsearch-plugin install analysis-icu
- sudo chown -R elasticsearch:elasticsearch /etc/default/elasticsearch
- sudo service elasticsearch restart
- wget -q --waitretry=5 --retry-connrefused -t 20 -T 10 -O - http://127.0.0.1:9200
- sudo service elasticsearch status
- redis-server &
- git clone https://${TOKEN}:x-oauth-basic@github.com/meedan/configurator ./configurator
- mkdir -p ~/.aws && cp configurator/$APP/travis/credentials ~/.aws/
- d=configurator/$APP/travis/check-api/; for f in $(find $d -type f); do cp "$f" "${f/$d/}"; done
- rm -rf tmp/cache tmp/cache1 tmp/cache2 tmp/cache3 tmp/cache4 tmp/cache5 && mkdir -p tmp/cache tmp/cache1
  tmp/cache2 tmp/cache3 tmp/cache4 tmp/cache5
cache:
  directories:
  - "/tmp/bundler"
  - "/tmp/downloads"
  - "/usr/local/lib/python2.7/dist-packages/pip"
addons:
  postgresql: '11'
  hosts:
  - api
bundler_args: "--jobs 3 --retry 3 --without nothing --path=/tmp/bundler"
before_script:
- cd test && ./setup-parallel-env.sh && cd -
- bundle exec rake assets:precompile
- RAILS_ENV=test bundle exec puma -w 3 -t 8:60 --preload -b tcp://127.0.0.1:3000 >/dev/null &
- sleep 10
- touch tmp/parallel_runtime_test.log
- chmod +w tmp/parallel_runtime_test.log
- printf '#!/bin/bash\ngo run /tmp/go/src/github.com/codeclimate/test-reporter/main.go $@\n' > test/cc-test-reporter && chmod +x test/cc-test-reporter
- export GOPATH=/tmp/go
- mkdir -p /tmp/go/src/github.com/codeclimate
- git clone https://github.com/codeclimate/test-reporter /tmp/go/src/github.com/codeclimate/test-reporter
after_script:
- echo 'Combining and uploading coverage...' && cd test && ./sum-upload-coverage.sh && cd -
- echo 'Parallel tests runtime log' && cat tmp/parallel_runtime_test.log
rvm:
- 2.4
jobs:
  include:
    - stage: test
      script: "export PATTERN='models mailers integration workers lib' && cd test && rm -rf $PATTERN && echo 'Running tests:' && ls && cd - && bundle exec rake parallel:test[5] && cd test && ./format-coverage.sh && cd -"
    - stage: test
      script: "export PATTERN='controllers' && cd test && rm -rf $PATTERN && echo 'Running tests:' && ls && cd - && bundle exec rake parallel:test[5] && cd test && ./format-coverage.sh && cd -"
notifications:
  slack:
    secure: dhqNhrJ0FVPnjtxa7R6k0s+1h/gMFNeK8zYJLZw+mK/FJ41K1u82Y8E6IDFbgNcKyAJ27ielvzGgWGSkDVltEnPR+ph15OMcy05TM9Pr2tWNusbDECOaEQgn4vGOq0shmiahE9tTOQpgc1TzhzIF9o1xgocah2PCLKiiH06kiiRlNZkaeQSJRFrXsPDDK8jIUtkLLUvFGQA6fq/lOh4tN6/N+K6+fo86wSxarkjv3d6h2flqvQqvqkbNpkv/UBC2Y1QACP+EX6uA0ySer8K5X6Q0Trrkjjacwvo5j74UVa+UYrBD+vr7Mgnr5aNFNId6M2nHd92ZiPM+6VDllCWsDLvJ2qFFy8cOO693EjrU7puaPp29+sptriIC71dk1oHSIEpPWwuaEZKzpwP4Swe322ne2th2VrjMhIye2Ru0519Lr2Dl4iTVV+hxoeVta3Nng23rUjrGoAbcw2FO1jmhANp8JWatv/V4PmlrS1/kYbiCfltWOMbKAD9f1EOTFnPCJsp3hPL238Ic+kvNJ8LM+ItNNR5cly+JPto6nSnMO8uhig9i78Mp2hVpnvrwhDLYntWEP2vcaNhP8oRys7X2iq5PRmsRwr9SyJReczd6i5gnvskXqKat6mNfPeGMBKSYof/1ve3Um0wEtwaYxvU5y/ZezFc3Kzzi6vt4P86j+mg=
env:
  global:
    - secure: NwJYV3kghSW2hReSDOnY0sG1oe7IDcix/pZprWHkfkpc+520355n71uj7gofQ2tOO7x2rg2+j9q1GVx9hbP0EsOCIl2u0csnA7lrfe9COp9cGdM7gMzSN6CvuwW9OME9eark37ACSHW1LD1TGB6OcjOkoQxTCM4E00Nj1zAYdT4gbhnBLnxW0FPpEqRB+0XN6ev53HdE5+KrwOIG/chYL/FdaTUdjfyikoduJp5pPjHt1Nd+LSoEt3WbYs8IJeSJIdzCYrD/gXHdjGF1f8v4PFCFyl1ashFtLPMuS+4DBZjR4grSbhpTBwoJAr6oRbWJNAkmaxC26s574U/7QgP6MFlJzhgKim2gvyGUmTSKgxZViyn1y7oend+vWE0281lHDMPqtO3fNel6HteFm/GoJ3lSvZPd8ddveJNacPZB6+K7KzvJWEoRy5eYdUjaejA6KiaSkblpqXoMWwDH+RjCde/HANxMhrECa9yCZlLKBdI5dPccyQwxKnebyZkU37VeWFc9fw2EUy9gmAunV5SH/Osz7b+IX+h3Mf8WxSvQutCUrD+1kspzkEVEXX41SawKD30OfMX9ZBZB9ueisyjB4kW0GzvCGlANMAQ4VDS4/FOmc+5IhcDN8i8PvzE5IGooETOtcwMWVZMrbA0/vq2Z44WQpS2Lq1NYGYhqAN947lk=
